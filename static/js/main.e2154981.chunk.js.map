{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","localData","localStorage","getItem","JSON","parse","count1","setCount1","localData2","count2","setCount2","useEffect","setItem","stringify","className","onClick","xmlns","class","viewBox","fill","d","fillRule","clipRule","stroke","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA8FeA,MA1Ff,WAEE,MAA4BC,oBAAU,WACpC,IAAMC,EAAYC,aAAaC,QAAQ,QACvC,OAAOF,EAAYG,KAAKC,MAAMJ,GAAa,KAF7C,mBAAOK,EAAP,KAAeC,EAAf,KAIA,EAA4BP,oBAAU,WACpC,IAAMQ,EAAaN,aAAaC,QAAQ,QACxC,OAAOK,EAAaJ,KAAKC,MAAMG,GAAc,KAF/C,mBAAOC,EAAP,KAAeC,EAAf,KAqCA,OAhCAC,qBAAU,WACRT,aAAaU,QAAQ,OAAQR,KAAKS,UAAUP,MAE3C,CAACA,IACJK,qBAAU,WACRT,aAAaU,QAAQ,OAAQR,KAAKS,UAAUJ,MAE3C,CAACA,IA2BF,sBAAKK,UAAU,MAAf,UAEE,sBAAKA,UAAU,QAAf,UACE,2CACA,sBAAKA,UAAU,WAAf,UACA,qBAAKC,QA1BX,WACER,EAAUD,EAAO,IAyBQU,MAAM,6BAA6BC,MAAM,QAAQC,QAAQ,YAAYC,KAAK,eAA/F,SACE,sBAAM,YAAU,UAAUC,EAAE,6JAA6J,YAAU,cAErM,+BAAOd,IACP,qBAAKS,QAjCX,WACER,EAAUD,EAAO,IAgCQU,MAAM,6BAA6BF,UAAU,QAAQI,QAAQ,YAAYC,KAAK,eAAnG,SACE,sBAAME,SAAS,UAAUD,EAAE,6JAA6JE,SAAS,iBAInM,qBAAKP,QAxBX,WACER,EAAU,IAuBgBS,MAAM,6BAA6BC,MAAM,cAAcE,KAAK,OAAOD,QAAQ,YAAYK,OAAO,eAApH,SACA,sBAAM,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAIH,EAAE,+IAM1E,sBAAKN,UAAU,QAAf,UACE,2CACA,sBAAKA,UAAU,WAAf,UACA,qBAAKC,QAtCX,WACEL,EAAUD,EAAO,IAqCQO,MAAM,6BAA6BC,MAAM,QAAQC,QAAQ,YAAYC,KAAK,eAA/F,SACE,sBAAM,YAAU,UAAUC,EAAE,6JAA6J,YAAU,cAErM,+BAAOX,IACP,qBAAKM,QA7CX,WACEL,EAAUD,EAAO,IA4CQO,MAAM,6BAA6BF,UAAU,QAAQI,QAAQ,YAAYC,KAAK,eAAnG,SACE,sBAAME,SAAS,UAAUD,EAAE,6JAA6JE,SAAS,iBAInM,qBAAKP,QAxCX,WACEL,EAAU,IAuCgBM,MAAM,6BAA6BC,MAAM,cAAcE,KAAK,OAAOD,QAAQ,YAAYK,OAAO,eAApH,SACE,sBAAM,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAIH,EAAE,mJCvEnEI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e2154981.chunk.js","sourcesContent":["import { useRef } from 'react';\nimport { useState, useEffect} from 'react';\nimport './App.css';\n\nfunction App() {\n  \n  const [count1, setCount1] = useState( ()=>{\n    const localData = localStorage.getItem('num1');\n    return localData ? JSON.parse(localData) : 0; \n  } );\n  const [count2, setCount2] = useState( ()=>{\n    const localData2 = localStorage.getItem('num2');\n    return localData2 ? JSON.parse(localData2) : 0;\n  } );\n\n  useEffect(() => {\n    localStorage.setItem('num1', JSON.stringify(count1))\n    \n  }, [count1]);\n  useEffect(() => {\n    localStorage.setItem('num2', JSON.stringify(count2))\n    \n  }, [count2]);\n\n\n  function incr1 () {\n    setCount1(count1+1)\n  }\n  function decr1 () {\n    setCount1(count1-1)\n  }\n\n  function incr2 () {\n    setCount2(count2+1)\n  }\n  function decr2 () {\n    setCount2(count2-1)\n  }\n\n  function reset1 () {\n    setCount1(0)\n  }\n  function reset2 () {\n    setCount2(0)\n  }\n\n\n  return (\n    \n    <div className=\"App\">\n  \n      <div className='card1'>\n        <h2>Counter 1</h2>\n        <div className='controls'>\n        <svg onClick={decr1} xmlns=\"http://www.w3.org/2000/svg\" class=\"arrsx\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm.707-10.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L9.414 11H13a1 1 0 100-2H9.414l1.293-1.293z\" clip-rule=\"evenodd\" />\n        </svg>\n        <span>{count1}</span>\n        <svg onClick={incr1} xmlns=\"http://www.w3.org/2000/svg\" className=\"arrdx\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 1.414L10.586 9H7a1 1 0 100 2h3.586l-1.293 1.293a1 1 0 101.414 1.414l3-3a1 1 0 000-1.414z\" clipRule=\"evenodd\" />\n        </svg>\n        </div>\n        \n        <svg onClick={reset1} xmlns=\"http://www.w3.org/2000/svg\" class=\"resetButton\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M3 12l6.414 6.414a2 2 0 001.414.586H19a2 2 0 002-2V7a2 2 0 00-2-2h-8.172a2 2 0 00-1.414.586L3 12z\" />\n        </svg>\n        \n\n      </div>\n\n      <div className='card2'>\n        <h2>Counter 2</h2>\n        <div className='controls'>\n        <svg onClick={decr2} xmlns=\"http://www.w3.org/2000/svg\" class=\"arrsx\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm.707-10.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L9.414 11H13a1 1 0 100-2H9.414l1.293-1.293z\" clip-rule=\"evenodd\" />\n        </svg>\n        <span>{count2}</span>\n        <svg onClick={incr2} xmlns=\"http://www.w3.org/2000/svg\" className=\"arrdx\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 1.414L10.586 9H7a1 1 0 100 2h3.586l-1.293 1.293a1 1 0 101.414 1.414l3-3a1 1 0 000-1.414z\" clipRule=\"evenodd\" />\n        </svg>\n        </div>\n        \n        <svg onClick={reset2} xmlns=\"http://www.w3.org/2000/svg\" class=\"resetButton\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M3 12l6.414 6.414a2 2 0 001.414.586H19a2 2 0 002-2V7a2 2 0 00-2-2h-8.172a2 2 0 00-1.414.586L3 12z\" />\n        </svg>\n        \n\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}